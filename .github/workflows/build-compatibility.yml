# Copyright 2020-2021 Alibaba Group Holding Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Compatibility Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        arrow: [none, 1.0.1-1, 2.0.0-1, 3.0.0-1]
        exclude:
          - os: ubuntu-18.04
            arrow: none
          - os: macos-10.15
            arrow: 1.0.1-1
          - os: macos-10.15
            arrow: 2.0.0-1
          - os: macos-10.15
            arrow: 3.0.0-1

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Generate Summary for Submodules
        run: |
          git submodule > git-modules.txt
          cat git-modules.txt

      - name: Cache for cccahe
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ matrix.os }}-build-ccache-${{ hashFiles('**/git-modules.txt') }}
          restore-keys: |
            ${{ matrix.os }}-build-ccache-

      - name: Install Dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          # Note:
          #
          # install libgandiva-dev for workaround for https://issues.apache.org/jira/browse/ARROW-10495
          #
          # that affects arrow-2.0.0

          sudo apt update -y
          sudo apt install -y ca-certificates \
                              ccache \
                              cmake \
                              libboost-all-dev \
                              libbrotli-dev \
                              libbz2-dev \
                              libcurl4-openssl-dev \
                              libgflags-dev \
                              libgoogle-glog-dev \
                              libgrpc-dev \
                              libgrpc++-dev \
                              libgtest-dev \
                              liblz4-dev \
                              libmpich-dev \
                              libprotobuf-dev \
                              librdkafka-dev \
                              libre2-dev \
                              libsnappy-dev \
                              libssl-dev \
                              libunwind-dev \
                              librdkafka-dev \
                              libutf8proc-dev \
                              libz-dev \
                              libzstd-dev \
                              lsb-release \
                              protobuf-compiler-grpc \
                              python3-pip \
                              wget

          # install apache-arrow
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt install -y libarrow-dev=${{ matrix.arrow }}

          # install python packages for codegen
          sudo pip3 install -U pip
          sudo pip3 install libclang parsec setuptools wheel twine

      - name: Install Dependencies for MacOS
        if: runner.os == 'macOS'
        run: |
          function install_or_upgrade {
              if brew ls --versions "$1" >/dev/null; then
                  HOMEBREW_NO_AUTO_UPDATE=1 brew upgrade "$1"
              else
                  HOMEBREW_NO_AUTO_UPDATE=1 brew install "$1"
              fi
          }

          brew update
          for dep in apache-arrow boost ccache cmake gflags glog googletest grpc librdkafka libunwind-headers open-mpi openssl protobuf; do
              install_or_upgrade $dep;
          done

          # install python packages for codegen
          pip3 install -U pip
          pip3 install libclang parsec

      - name: Install libgrape-lite
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          git clone https://github.com/alibaba/libgrape-lite.git
          cd libgrape-lite
          mkdir build
          cd build
          cmake ..
          make -j`nproc`
          sudo make install

      - name: Setup tmate session
        if: false
        uses: mxschmitt/action-tmate@v2

      - name: CMake
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release \
                   -DBUILD_SHARED_LIBS=ON \
                   -DBUILD_VINEYARD_COVERAGE=ON \
                   -DBUILD_VINEYARD_PYTHON_BINDINGS=ON \
                   -DBUILD_VINEYARD_BASIC=ON \
                   -DBUILD_VINEYARD_IO=ON \
                   -DBUILD_VINEYARD_IO_KAFKA=ON \
                   -DBUILD_VINEYARD_MIGRATION=ON \
                   -DBUILD_VINEYARD_TESTS=ON

      - name: Build
        run: |
          # leverage ccache
          export PATH=/usr/lib/ccache:$PATH

          pushd build
          make -j`nproc`
          make vineyard_tests -j`nproc`
          make vineyard_client_python -j`nproc`
          make ccache-stats
          sudo make install
          popd

          # build & install vineyard for python

          python3 setup.py bdist_wheel
          sudo pip3 install dist/*.whl -U

          # build & install vineyard-io

          pushd modules/io
          python3 setup.py bdist_wheel
          sudo pip3 install dist/*.whl -U
          popd

